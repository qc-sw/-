%%图像叠加函数
function C = diejia(pic_1,pic_2)
[m1,n1,l1] = size(pic_1);
[m2,n2,l2] = size(pic_2);
t = zeros(m1,n1,l1); 
t = uint8(t);
t((m1/2-m2/2+1):(m1/2+m2/2),(n1/2-n2/2+1):(n1/2+n2/2),:) = pic_2 ;%做居中处理
C = imadd(0.5*t,pic_1);%乘以0.5对中间小照片做透明处理
%简易Alpha混合算法
%取得上层与下层颜色的 RGB三基色，
%用r,g,b 为最后取得的颜色值；r1,g1,b1是上层的颜色值；r2,g2,b2是下层颜色值
%若Alpha=透明度，则
%当Alpha=50%时，
%  r = r1/2 + r2/2;
%  g = g1/2 + g2/2;
%  b = b1/2 + b2/2;
C((m1/2-m2/2+1):(m1/2+m2/2),(n1/2-n2/2+1):(n1/2+n2/2),:) =... 
C((m1/2-m2/2+1):(m1/2+m2/2),(n1/2-n2/2+1):(n1/2+n2/2),:)-...
pic_1((m1/2-m2/2+1):(m1/2+m2/2),(n1/2-n2/2+1):(n1/2+n2/2),:).*0.5;%因为pic_1没有乘0.5，这里做补偿